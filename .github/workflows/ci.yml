name: CI

on:
  push:
    branches:
      - main
      - master
      - Debug
      - Testing
  pull_request:
    branches:
      - main
      - master
      - Debug
      - Testing

env:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  SONAR_USER_HOME: "${{ github.workspace }}/.sonar"
  GIT_DEPTH: "0"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Build with Gradle
        run: ./gradlew assemble
        env:
          GRADLE_OPTS: -Dorg.gradle.daemon=false
          SONAR_USER_HOME: "${{ github.workspace }}/.sonar"
          GIT_DEPTH: 0
          JAVA_HOME: ${{ env.JAVA_HOME }}
          JAVA_HOME_17_X64: ${{ env.JAVA_HOME }}

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Run tests
        run: ./gradlew test
        env:
          GRADLE_OPTS: -Dorg.gradle.daemon=false
          SONAR_USER_HOME: "${{ github.workspace }}/.sonar"
          GIT_DEPTH: 0
          JAVA_HOME: ${{ env.JAVA_HOME }}
          JAVA_HOME_17_X64: ${{ env.JAVA_HOME }}

  sonarqube-check:
    runs-on: windows-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~\.sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarQube scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarQube scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"DeckedOut-Backend" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}"
          dotnet build
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

  sonarqube-vulnerability-report:
    runs-on: ubuntu-latest
    needs: sonarqube-check
    if: always()
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Download SonarQube Vulnerability Report
        run: curl -u "${{ secrets.SONAR_TOKEN }}:" "${{ secrets.SONAR_HOST_URL }}/api/issues/gitlab_sast_export?projectKey=Decked_Out&branch=${{ github.head_ref }}&pullRequest=${{ github.event.pull_request.number }}" -o gl-sast-sonar-report.json
      - name: Upload SAST report
        uses: actions/upload-artifact@v2
        with:
          name: gl-sast-sonar-report
          path: gl-sast-sonar-report.json
          retention-days: 1
