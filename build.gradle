plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.3'
    id "org.sonarqube" version "4.2.1.3168"
    id "jacoco"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}
jacoco{
    toolVersion = "0.8.7"
}
sonar {
    properties {
        property "sonar.token", "sqp_322e3df87e75c025194402818d19218f8394219b"
        property "sonar.projectKey", "Decked_Out"
        property "sonar.organization", "myOrganization"
        property "sonar.host.url", "http://localhost:9000"
        property "sonar.qualitygate.wait", true
        property "sonar.junit.reportPaths", "build/reports/jacoco/test/"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/jacoco/test/jacocoTestReport.xml"
    }
}

jacocoTestReport{
    reports {
        xml.required = true
    }
}
test.finalizedBy jacocoTestReport

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-mysql'
    implementation 'mysql:mysql-connector-java:8.0.33'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.cloud:spring-cloud-starter-bootstrap:4.0.4'
    testImplementation 'com.playtika.testcontainers:embedded-mysql:3.0.0-RC9'
}

tasks.named('test') {
    useJUnitPlatform()
}